name: CI Testing

# Controls when the workflow will run
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ABY-and-EMP:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup
        run: |
          sudo apt-get update
          ./setup_env_and_build.sh quick
          source mpc_venv/bin/activate
        shell: bash

      - name: Test EMP
        if: always()
        run: |
          pwd
          ls
          eval $(opam config env)
          cd EzPC/EzPC/
          ./runemptests.sh
          cd ../..
      - name: Test ABY
        if: always()
        run: |
          cd EzPC/EzPC/
          eval $(opam config env)
          chmod +x runtests.sh
          make runtest
          cd ../..
          
  ONNX-CPP:
    # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        - name: Setup
          run: |
            sudo apt-get update
            ./setup_env_and_build.sh quick
            source mpc_venv/bin/activate
          shell: bash

        - name: Test Athos ONNX-CPP
          if: always()
          run: |
            source mpc_venv/bin/activate
            cd Athos/tests/onnx/unittests
            pytest --backend CPP
          shell: bash
        
  ONNX-SCI-OT:
    # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        - name: Setup
          run: |
            sudo apt-get update
            ./setup_env_and_build.sh quick
            source mpc_venv/bin/activate
          shell: bash
        - name: Test Athos ONNX SCI-OT
          if: always()
          run: |
            source mpc_venv/bin/activate
            cd Athos/tests/onnx/unittests
            pytest --backend 2PC_OT

  FSS:
    # The type of runner that the job will run on
      runs-on: ubuntu-latest
      container: 
        image: kanav99/ezpc-llama:latest
        # options: "--entrypoint /bin/bash"
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - name: Update Git
          run: |
            add-apt-repository ppa:git-core/ppa -y
            apt-get update
            apt-get install git -y 
       
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            submodules: 'true'

        - name: Setup
          env:
            HOME: /root
            OPAM_SWITCH_PREFIX: /root/.opam/4.10.0
            CAML_LD_LIBRARY_PATH: /root/.opam/4.10.0/lib/stublibs:/root/.opam/4.10.0/lib/ocaml/stublibs:/root/.opam/4.10.0/lib/ocaml
            OCAML_TOPLEVEL_PATH: /root/.opam/4.10.0/lib/toplevel
            MANPATH: :/root/.opam/4.10.0/man
            PATH: /root/.opam/4.10.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
          run: |
            pwd
            cd EzPC/EzPC/
            make
            cd ../../
            sudo ln -s `pwd`/EzPC/EzPC/fssc /usr/local/bin/fssc
            cd FSS/
            mkdir build
            cd build
            pwd
            cmake -DCMAKE_INSTALL_PREFIX=./install -DCMAKE_BUILD_TYPE=Release ../
            make install
            cd ../../
          shell: bash
        - name: Test
          env:
            HOME: /root
          run: |
            cd FSS/tests
            ./runall.sh
  
            
  
          
  TF-SCI-OT:
    # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        - name: Setup
          run: |
            sudo apt-get update
            ./setup_env_and_build.sh quick
            source mpc_venv/bin/activate
          shell: bash
        - name: Test Athos TF SCI-OT
          if: always()
          run: |
            source mpc_venv/bin/activate
            cd Athos/tests/tf/unittests
            pytest --backend 2PC_OT
            
  
